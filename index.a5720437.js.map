{"mappings":"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","sources":["utils/store.js","utils/display.js","utils/tick.js","utils/globals.js","game/events.js","utils/devtools.js","app.js"],"sourcesContent":["const store = {\n\twholeStoreSubs: [],\n};\n\nfunction getAllStoreData() {\n\tconst storeValues = {};\n\n\tfor (let key in store) {\n\t\tif (store[key].data) {\n\t\t\tstoreValues[key] = store[key].data;\n\t\t}\n\t}\n\n\treturn storeValues;\n}\n\nfunction saveToLocalStorage() {\n\tconst storeValues = JSON.stringify(getAllStoreData());\n\n\twindow.localStorage.setItem('idlestore', storeValues);\n}\n\nfunction initStoreValue(key, data, subs=[]) {\n\tif (store[key]) {\n\t\tconsole.error('Store already has entry by key', key);\n\t\treturn;\n\t}\n\n\tconst storeValues = JSON.parse(window.localStorage.getItem('idlestore'));\n\n\tif (storeValues && storeValues[key]) {\n\t\tdata = storeValues[key];\n\t}\n\n\tstore[key] = {\n\t\tdata: data,\n\t\tsubs: [...subs]\n\t};\n}\n\nfunction getStoreValue(key, prop) {\n\tif (!store[key]) {\n\t\tconsole.error('No entry in store by key', key);\n\t\treturn null;\n\t}\n\n\treturn store[key].data[prop];\n}\n\nfunction executeSubs(key, prop) {\n\tif (!store[key]) {\n\t\tconsole.error('No entry in store by key', key);\n\t\treturn;\n\t}\n\n\tconst subs = store[key].subs;\n\n\tif (subs.length == 0) {\n\t\treturn;\n\t} \n\n\tfor (let sub in subs) {\n\t\tif (subs[sub].triggers.indexOf(prop) > -1) {\n\t\t\tsubs[sub].func();\n\t\t}\n\t}\n\n\treturn;\n}\n\nfunction updateStoreValue(key, prop, value) {\n\tif (!store[key]) {\n\t\tconsole.error('No entry in store by key', key);\n\t\treturn;\n\t}\n\n\tstore[key].data[prop] = value;\n\texecuteSubs(key, prop);\n\texecuteWholeStoreSubs();\n\n\treturn;\n}\n\nfunction updateStoreSubs(key, subs) {\n\tif (!store[key]) {\n\t\tconsole.error('No entry in store by key', key);\n\t\treturn;\n\t}\n\n\tstore[key].subs.push(...subs);\n\n\treturn;\n}\n\nfunction replacer(key, value) {\n\tif (typeof value === 'function') {\n\t\treturn value.toString();\n\t}\n\treturn value;\n}\n\nfunction getStoreString(seperator='') {\n\treturn JSON.stringify(store, replacer, seperator);\n}\n\nfunction updateWholeStoreSubs(subs) {\n\tstore.wholeStoreSubs.push(...subs);\n}\n\nfunction executeWholeStoreSubs() {\n\tconst subs = store.wholeStoreSubs;\n\n\tif (subs.length == 0) {\n\t\treturn;\n\t} \n\n\tfor (let sub in subs) {\n\t\tsubs[sub]();\n\t}\n\n\treturn;\n}\n\nexport {\n\tinitStoreValue,\n\tgetStoreValue,\n\tupdateStoreValue,\n\tupdateStoreSubs,\n\tgetStoreString,\n\tupdateWholeStoreSubs,\n\tsaveToLocalStorage\n};\n","import { getStoreValue } from '/utils/store.js';\n\nfunction draw(className, value) {\n\tdocument.querySelector(className).innerHTML = value;\n\n\treturn;\n}\n\nfunction drawFromStore(className, storeKey, prop) {\n\tlet value = getStoreValue(storeKey, prop);\n\n\tif (value === null) {\n\t\tconsole.error('Failed to retrieve value from store using key', storeKey);\n\t\treturn;\n\t}\n\n\tdraw(className, value);\n\n\treturn;\n}\n\nfunction createAccumulatorInterface(name) {\n\tconst accumulator = document.createElement('div');\n\taccumulator.classList.add(name);\n\n\tconst title = document.createElement('h3'),\n\t\toutput = document.createElement('p'),\n\t\tupgradeInterval = document.createElement('button'),\n\t\tupgradeRate = document.createElement('button');\n\n\tvar titleText = name.split('_').map((word) => word[0].toUpperCase() + word.substring(1)).join(' ');\n\n\ttitle.innerHTML = titleText;\n\n\toutput.classList.add(name + '_output');\n\n\tupgradeInterval.classList.add(name + '_interval');\n\tupgradeInterval.innerHTML = `Upgrade Interval: $<span class=\"${name}_upgrade_interval_cost></span>`;\n\n\tupgradeRate.classList.add(name + '_rate');\n\tupgradeRate.innerHTML = `Upgrade Rate: $<span class=\"${name}_upgrade_rate_cost></span>`;\n\n\taccumulator.append(title, output, upgradeInterval, upgradeRate);\n\n\tdocument.querySelector('.accumulators').append(accumulator);\n}\n\nexport {\n\tdraw,\n\tdrawFromStore,\n\tcreateAccumulatorInterface\n};\n","import { getStoreValue } from '/utils/store.js';\n\nimport { MINIMUM_INTERVAL } from '/utils/globals.js';\n\nfunction onlineTicks(cb, name) {\n\tvar interval = getStoreValue(name, 'interval'),\n\t\trunning = getStoreValue(name, 'running'),\n\t\tglobalExit = getStoreValue('exit', 'value');\n\n\tif (interval < MINIMUM_INTERVAL) {\n\t\tconsole.warn('Attempted to use interval lower than minimum interval, setting interval to minimum');\n\t\tinterval = MINIMUM_INTERVAL;\n\t}\n\n\tif (running !== true) {\n\t\tconsole.log('Ticks stopped');\n\t\treturn;\n\t}\n\n\tif (globalExit === true) {\n\t\tconsole.log('All ticks stopped - global exit');\n\t\treturn;\n\t}\n\n\tsetTimeout(() => {\n\t\tcb();\n\t\tonlineTicks(...arguments);\n\t}, interval);\n\n\treturn;\n}\n\n// #TODO: Implement offline tick calculator\n// function offlineTicks(interval, cb) {\n// \t\n// }\n\nexport {\n\tonlineTicks\n};\n","export const MINIMUM_INTERVAL = 300;\n\n\n","import { draw, createAccumulatorInterface } from '/utils/display.js';\nimport { onlineTicks } from '/utils/tick.js';\nimport { getStoreValue, updateStoreValue, initStoreValue } from '/utils/store.js';\n\nimport { MINIMUM_INTERVAL } from '/utils/globals.js';\n\nfunction startButton() {\n\tdocument.querySelector('.startCounter').addEventListener('click', function () {\n\t\tupdateStoreValue('exit', false);\n\n\t\tcreateAccumulator('sample', 2000, 2);\n\t\tcreateAccumulator('sample_2', 10000, 10);\n\t\tcreateAccumulator('sample_3', 500, 1);\n\n\t\tdocument.querySelector('.startCounter').disabled = true;\n\t\tdocument.querySelector('.stopCounter').disabled = false;\n\t});\n\n\treturn;\n}\n\nfunction calculateOutput(name, resource='$') {\n\tconst interval = getStoreValue(name, 'interval'),\n\t\trate = getStoreValue(name, 'rate');\n\n\tlet intervalString,\n\t\trateString;\n\n\tif (interval === MINIMUM_INTERVAL) {\n\t\tintervalString = 'tick';\n\t} else {\n\t\tintervalString = interval / 1000.0 + ' second' + (interval / 1000.0 === 1 ? '' : 's');\n\t}\n\n\tif (resource === '$') {\n\t\trateString = '$' + rate;  \n\t} else {\n\t\trateString = rate + ' ' + resource;\n\t}\n\n\n\n\treturn `${rateString} / ${intervalString}`;\n}\n\nfunction createAccumulator(name, interval, rate, intervalCoef,  resource='money') {\t\n\tcreateAccumulatorInterface(name);\n\n\tconst updateOutput = () => {draw('.' + name + '_output', calculateOutput(name));};\n\n\tinitStoreValue(name, {\n\t\tinterval,\n\t\trate,\n\t\tresource,\n\t\trunning: true,\n\t},\n\t[\n\t\t{\n\t\t\ttriggers: [interval, rate],\n\t\t\tfunc: updateOutput\n\t\t}\n\t]);\n\n\tupdateOutput();\n\n\tconst cb = () => {\n\t\tvar amount = getStoreValue(resource, 'value');\n\n\t\tupdateStoreValue(resource, 'value', amount + getStoreValue(name, 'rate'));\n\t};\n\n\tonlineTicks(cb, name);\n\n\treturn name;\n}\n\nfunction stopButton() {\n\tdocument.querySelector('.stopCounter').addEventListener('click', function () {\n\t\tupdateStoreValue('exit', 'value', true);\n\t\tdocument.querySelector('.startCounter').disabled = false;\n\t\tdocument.querySelector('.stopCounter').disabled = true;\n\t});\n\n\treturn;\n}\n\nfunction upgradeButton() {\n\tdocument.querySelector('.buyUpgrade').addEventListener('click', function () {\n\t\tvar upgradeCost = getStoreValue('upgradeCost'),\n\t\t\tmoney = getStoreValue('money'),\n\t\t\tinterval = getStoreValue('interval');\n\n\t\tif (upgradeCost > money) {\n\t\t\tdraw('.warningText', 'Not enough money!');\n\t\t\treturn;\n\t\t}\n\n\t\tdraw('.warningText', '');\n\n\t\tupdateStoreValue('money', money - upgradeCost);\n\t\tupdateStoreValue('interval', interval - 50);\n\t\tupdateStoreValue('upgradeCost', upgradeCost * 2);\n\t});\n\n\treturn;\n}\n\nexport {\n\tstartButton,\n\tstopButton,\n\tupgradeButton\n};\n","import { updateWholeStoreSubs, getStoreString } from '/utils/store.js';\nimport { draw } from '/utils/display.js';\n\nfunction isInDev() {\n\tvar params = new URLSearchParams(window.location.search);\n\n\tif (params.get('devmode') !== null) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction wipe() {\n\tvar params = new URLSearchParams(window.location.search);\n\n\tif (params.get('wipe') !== null) {\n\t\twindow.localStorage.removeItem('idlestore');\n\t\tparams.delete('wipe');\n\n\t\twindow.location.href = window.location.origin + window.location.pathname + '?' + params.toString();\n\t}\n}\n\nfunction activateDevFunctions() {\n\tif (!isInDev()) {\n\t\treturn;\n\t}\n\t\t\t\n\tconst devTools = document.createElement('pre');\n\tdevTools.classList.add('devTools');\n\tdocument.querySelector('.game').append(devTools);\n\n\tupdateWholeStoreSubs([() => draw('.devTools', getStoreString('\\t'))]);\n\n\twipe();\n\n\twindow.getStoreString = getStoreString;\n\n\treturn;\n}\n\nexport {\n\tactivateDevFunctions\n};\n","import { drawFromStore } from '/utils/display.js';\nimport { startButton, stopButton, upgradeButton } from '/game/events.js';\nimport { initStoreValue, updateWholeStoreSubs, saveToLocalStorage } from '/utils/store.js';\n\nimport { activateDevFunctions } from '/utils/devtools.js';\n\nfunction bindEvents() {\n\tstartButton();\n\tstopButton();\n\tupgradeButton();\n\n\treturn;\n}\n\nfunction initializeStore() {\n\tinitStoreValue('money', {value: 0}, [{triggers: ['value'], func: () => drawFromStore('.money', 'money', 'value')}]);\n\tinitStoreValue('upgradeCost', {value: 1}, [{triggers: ['value'], func: () => drawFromStore('.upgradeCost', 'upgradeCost', 'value')}]);\n\tinitStoreValue('exit', {value: false});\n\n\treturn;\n}\n\nfunction initializeDraw() {\n\tdrawFromStore('.money', 'money', 'value');\n\tdrawFromStore('.upgradeCost', 'upgradeCost', 'value');\n\t\n\treturn;\n}\n\nfunction init() {\n\tconsole.log('Application started');\n\t\n\tbindEvents();\n\n\tinitializeStore();\n\tinitializeDraw();\n\n\tdocument.querySelector('.startCounter').disabled = false;\n\tdocument.querySelector('.stopCounter').disabled = true;\n\n\tactivateDevFunctions();\n\n\tupdateWholeStoreSubs([saveToLocalStorage]);\n\n\treturn;\n}\n\ninit();\n"],"names":["$e5a1e8ad98edf3c3$var$store","wholeStoreSubs","$e5a1e8ad98edf3c3$export$1b8cd2d0ef9a8e5d","storeValues","JSON","stringify","key","data","$e5a1e8ad98edf3c3$var$getAllStoreData","window","localStorage","setItem","$e5a1e8ad98edf3c3$export$49bb15a59253183a","subs","console","error","parse","getItem","$e5a1e8ad98edf3c3$export$2bf86598e5b0b657","prop","$e5a1e8ad98edf3c3$export$c4def42558db6d40","value","length","sub","triggers","indexOf","func","$e5a1e8ad98edf3c3$var$executeSubs","$e5a1e8ad98edf3c3$var$executeWholeStoreSubs","$e5a1e8ad98edf3c3$var$replacer","toString","$e5a1e8ad98edf3c3$export$4057d970d3926fd7","seperator","$e5a1e8ad98edf3c3$export$d9291c43be2a46c0","push","$3d1283c690f0bed0$export$e529deb2bfd496dc","className","document","querySelector","innerHTML","$3d1283c690f0bed0$export$acf18b9e9fa3657b","storeKey","$c63a0215d81aa66d$export$547b13d7b8ab4e45","cb","name","interval","running","globalExit","warn","setTimeout","arguments","log","$6797e304a7b9719e$var$createAccumulator","rate","intervalCoef","resource","accumulator","createElement","classList","add","title","output","upgradeInterval","upgradeRate","titleText","split","map","word","toUpperCase","substring","join","append","$3d1283c690f0bed0$export$eed339e653f5d88c","updateOutput","intervalString","rateString","$6797e304a7b9719e$var$calculateOutput","amount","$09eab49b787ed8b7$export$51faf82b9919d880","URLSearchParams","location","search","get","devTools","params","removeItem","delete","href","origin","pathname","getStoreString","$6b17f08f738443dc$var$bindEvents","addEventListener","disabled","upgradeCost","money"],"version":3,"file":"index.a5720437.js.map"}